// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3 (swiftlang-1200.0.29.2 clang-1200.0.30.1)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name CPPresenceModule
import CPUtilities
import Foundation
import NotificationEngine
import CPUtilities.Private
import RestManager
import Swift
@_hasMissingDesignatedInitializers @objc public class CPPresentityListHandle : ObjectiveC.NSObject {
  @objc override dynamic public func isEqual(_ object: Any?) -> Swift.Bool
  @objc deinit
  @objc override dynamic public init()
}
@_hasMissingDesignatedInitializers @objc public class CPPresentityList : ObjectiveC.NSObject {
  @objc final public let name: Swift.String!
  @objc public var presentities: Swift.Set<CPPresenceModule.CPPresentity> {
    get
  }
  @objc override dynamic public func isEqual(_ object: Any?) -> Swift.Bool
  public func populatePresentities(json: [Swift.String : Any])
  @objc public func fetchStatus(completion: @escaping CPPresenceModule.FetchPresentityListCompletionBlock)
  @objc public func fetchStatus(presentity: CPPresenceModule.CPPresentity, completion: @escaping CPPresenceModule.FetchPresentityListCompletionBlock)
  @objc public func add(presentity: CPPresenceModule.CPPresentity, completion: @escaping CPUtilities.ErrorCompletionBlock)
  @objc public func remove(presentity: CPPresenceModule.CPPresentity, completion: @escaping CPUtilities.ErrorCompletionBlock)
  @objc public func subscribe(completion: @escaping CPUtilities.ErrorCompletionBlock)
  @objc public func statusChanged(presentity: CPPresenceModule.CPPresentity)
  @objc deinit
  @objc override dynamic public init()
}
@_hasMissingDesignatedInitializers @objc public class CPPresenceSource : ObjectiveC.NSObject {
  @objc public var activity: CPPresenceModule.PresenceActivity! {
    get
  }
  @objc public var duration: Swift.Int {
    get
  }
  @objc public func updateActivity(activity: CPPresenceModule.PresenceActivity, completion: @escaping CPPresenceModule.CreatePresenceSourceCompletionBlock)
  @objc deinit
  @objc override dynamic public init()
}
@_hasMissingDesignatedInitializers @objc public class CPPresentity : ObjectiveC.NSObject {
  @objc final public let userID: Swift.String!
  @objc public var activity: CPPresenceModule.PresenceActivity! {
    get
  }
  @objc public init(userID: Swift.String)
  @objc override dynamic public var hash: Swift.Int {
    @objc get
  }
  @objc override dynamic public func isEqual(_ object: Any?) -> Swift.Bool
  @objc override dynamic public init()
  @objc deinit
}
public typealias CreatePresenceSourceCompletionBlock = (CPUtilities.CPError?, CPPresenceModule.CPPresenceSource?) -> ()
public typealias FetchPresenceSourceCompletionBlock = (CPUtilities.CPError?, CPPresenceModule.CPPresenceSource?) -> ()
public typealias FetchPresenceSourceListCompletionBlock = (CPUtilities.CPError?, [CPPresenceModule.CPPresenceSource]?) -> ()
public typealias CreatePresentityListCompletionBlock = (CPUtilities.CPError?, CPPresenceModule.CPPresentityList?) -> ()
public typealias FetchPresentityListsCompletionBlock = (CPUtilities.CPError?, [CPPresenceModule.CPPresentityList]?) -> ()
public typealias FetchPresentityListCompletionBlock = (CPUtilities.CPError?, CPPresenceModule.CPPresentityList?) -> ()
@objc public class CPPresenceService : ObjectiveC.NSObject, CPUtilities.CPServiceProtocol {
  public var restClient: RestManager.CPRestClientBase?
  @objc public var delegate: CPPresenceModule.CPPresenceDelegate?
  @objc public var subscriptionDuration: Swift.Int
  public init(userInfo: CPUtilities.CPUserInfo, info: CPUtilities.CPServiceInfo)
  @objc public func serviceInfo() -> CPUtilities.CPServiceInfo
  @objc public func notifications() -> [Swift.String]
  @objc public func subscribe(channelID: Swift.String, completion: @escaping CPUtilities.SubscribeCompletion)
  @objc public func unsubscribe(channelID: Swift.String, completion: @escaping CPUtilities.UnsubscribeCompletion)
  @objc public func refreshSubscriptions(expiringInSeconds: Swift.Double, completion: @escaping CPUtilities.ErrorCompletionBlock)
  @objc public func createPresenceSource(activity: CPPresenceModule.PresenceActivity, completion: @escaping CPPresenceModule.CreatePresenceSourceCompletionBlock)
  @objc public func updatePresenceSource(source: CPPresenceModule.CPPresenceSource, activity: CPPresenceModule.PresenceActivity, completion: @escaping CPPresenceModule.CreatePresenceSourceCompletionBlock)
  @objc public func fetchPresenceSource(completion: @escaping CPPresenceModule.FetchPresenceSourceCompletionBlock)
  @objc public func fetchPresenceSource(source: CPPresenceModule.CPPresenceSource, completion: @escaping CPPresenceModule.FetchPresenceSourceCompletionBlock)
  @objc public func deletePresenceSource(source: CPPresenceModule.CPPresenceSource, completion: @escaping CPUtilities.DeleteCompletionBlock)
  @objc public func createPresentityList(name: Swift.String, presentities: [Swift.String], completion: @escaping CPPresenceModule.CreatePresentityListCompletionBlock)
  @objc public func fetchAllPresentityLists(completion: @escaping CPPresenceModule.FetchPresentityListsCompletionBlock)
  @objc public func fetchPresentityList(presentityList: CPPresenceModule.CPPresentityList, completion: @escaping CPPresenceModule.FetchPresentityListCompletionBlock)
  @objc public func deletePresentityList(presentityList: CPPresenceModule.CPPresentityList, completion: @escaping CPUtilities.DeleteCompletionBlock)
  @objc deinit
  @objc override dynamic public init()
}
@objc public enum CPPresenceActivities : Swift.Int, Swift.RawRepresentable {
  public typealias RawValue = Swift.String
  case ActivitiesUnknown
  case ActivitiesOther
  case Available
  case Away
  case Busy
  case Lunch
  case OnThePhone
  case Vacation
  public var rawValue: CPPresenceModule.CPPresenceActivities.RawValue {
    get
  }
  public init(rawValue: CPPresenceModule.CPPresenceActivities.RawValue)
  public var superState: CPPresenceModule.CPPresenceActivities.RawValue {
    get
  }
  public var willing: Swift.Bool {
    get
  }
}
@_hasMissingDesignatedInitializers @objc public class PresenceActivity : ObjectiveC.NSObject {
  @objc public var state: CPPresenceModule.CPPresenceActivities {
    get
  }
  @objc public var other: Swift.String? {
    get
  }
  @objc public var willing: Swift.Bool {
    get
  }
  @objc public var string: Swift.String {
    @objc get
  }
  @objc public init(_ state: CPPresenceModule.CPPresenceActivities)
  @objc public class func makeOther(activity: Swift.String, willing: Swift.Bool) -> CPPresenceModule.PresenceActivity
  @objc public class func makeUnknown(willing: Swift.Bool) -> CPPresenceModule.PresenceActivity
  @objc override dynamic public init()
  @objc deinit
}
@objc public protocol CPPresenceDelegate {
  @objc func listChanged(presentityList: CPPresenceModule.CPPresentityList)
  @objc func subscriptionExpired(presentityListHandle: CPPresenceModule.CPPresentityListHandle)
  @objc func statusChanged(presentity: CPPresenceModule.CPPresentity)
}
extension CPPresenceModule.CPPresenceActivities : Swift.Equatable {}
extension CPPresenceModule.CPPresenceActivities : Swift.Hashable {}
